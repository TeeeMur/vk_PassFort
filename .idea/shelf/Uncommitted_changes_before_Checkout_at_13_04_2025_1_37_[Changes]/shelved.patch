Index: app/src/main/java/com/example/passfort/designSystem/NavBar.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.passfort.designSystem\r\n\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.fillMaxHeight\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.offset\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.layout.width\r\nimport androidx.compose.foundation.shape.CircleShape\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.clip\r\nimport androidx.compose.ui.draw.drawWithContent\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.graphics.vector.ImageVector\r\nimport androidx.compose.ui.res.vectorResource\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.IntOffset\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.zIndex\r\nimport com.example.passfort.R\r\n\r\ndata class NavigationBarItem(\r\n    val nameOpenActivity: String,\r\n    val selectedIcon: ImageVector,\r\n    val unselectedIcon: ImageVector\r\n)\r\n\r\n\r\n@Preview\r\n@Composable\r\nfun NavigationBar() {\r\n    val navItems = listOf(\r\n        NavigationBarItem(\r\n            nameOpenActivity = \"\",\r\n            selectedIcon = ImageVector.vectorResource(R.drawable.navbar_home_selected),\r\n            unselectedIcon = ImageVector.vectorResource(R.drawable.navbar_home_unselected),\r\n        ),\r\n        NavigationBarItem(\r\n            nameOpenActivity = \"\",\r\n            selectedIcon = ImageVector.vectorResource(R.drawable.navbar_passwords_selected),\r\n            unselectedIcon = ImageVector.vectorResource(R.drawable.navbar_passwords_unselected)\r\n        ),\r\n        NavigationBarItem(\r\n            nameOpenActivity = \"\",\r\n            selectedIcon = ImageVector.vectorResource(R.drawable.navbar_key_selected),\r\n            unselectedIcon = ImageVector.vectorResource(R.drawable.navbar_key_unselected)\r\n        ),\r\n        NavigationBarItem(\r\n            nameOpenActivity = \"\",\r\n            selectedIcon = ImageVector.vectorResource(R.drawable.navbar_settings_selected),\r\n            unselectedIcon = ImageVector.vectorResource(R.drawable.navbar_settings_unselected)\r\n        )\r\n    )\r\n\r\n    val selectedItemByIndex by remember {\r\n        mutableStateOf(0)\r\n    }\r\n\r\n    Row(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .background(Color.White, RoundedCornerShape(40.dp))\r\n            .height(80.dp)\r\n            .padding(horizontal = 20.dp),\r\n        horizontalArrangement = Arrangement.SpaceBetween,\r\n        verticalAlignment = Alignment.CenterVertically\r\n    ) {\r\n        navItems.forEachIndexed { index, item ->\r\n            NavItem(item.selectedIcon, item.unselectedIcon, index == selectedItemByIndex, {})\r\n        if (index == 1){\r\n\r\n            Box(\r\n                modifier = Modifier\r\n                    .offset { IntOffset(x = 0, y = -60) }\r\n                    .clickable {  }\r\n                    .size(80.dp)\r\n                    .align(Alignment.Bottom)\r\n            ) {\r\n                Box(\r\n                    modifier = Modifier\r\n                        .clip(CircleShape)\r\n                        .fillMaxWidth()\r\n                        .background(MaterialTheme.colorScheme.primary, RoundedCornerShape(35.dp))\r\n                ) {\r\n                    Icon(\r\n                        modifier = Modifier\r\n                            .fillMaxSize(),\r\n                        imageVector = ImageVector.vectorResource(R.drawable.icon_button_add),\r\n                        tint = MaterialTheme.colorScheme.surface,\r\n                        contentDescription = null,\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun NavItem(iconSelected: ImageVector,\r\n            iconUnselected: ImageVector,\r\n            isSelected: Boolean,\r\n            onClick: () -> Unit) {\r\n    val iconImage = if (isSelected) iconSelected else iconUnselected\r\n    val iconColor = if (isSelected) MaterialTheme.colorScheme.primary else MaterialTheme.colorScheme.secondary\r\n\r\n    Box(\r\n        modifier = Modifier\r\n            .size(50.dp)\r\n            .clickable { onClick() }\r\n            .padding(10.dp),\r\n        contentAlignment = Alignment.Center\r\n    ) {\r\n        Icon(\r\n            modifier = Modifier\r\n                .fillMaxSize(),\r\n            imageVector = iconImage,\r\n            tint = iconColor,\r\n            contentDescription = null,\r\n        )\r\n    }\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/passfort/designSystem/NavBar.kt b/app/src/main/java/com/example/passfort/designSystem/NavBar.kt
--- a/app/src/main/java/com/example/passfort/designSystem/NavBar.kt	(revision c50d75f593cd78072bf814a7e210316a15ac9bd9)
+++ b/app/src/main/java/com/example/passfort/designSystem/NavBar.kt	(date 1744497380337)
@@ -44,7 +44,7 @@
 
 @Preview
 @Composable
-fun NavigationBar() {
+fun NavigationBar(navController: NavHostController) {
     val navItems = listOf(
         NavigationBarItem(
             nameOpenActivity = "",
@@ -75,7 +75,7 @@
     Row(
         modifier = Modifier
             .fillMaxWidth()
-            .background(Color.White, RoundedCornerShape(40.dp))
+            .background(MaterialTheme.colorScheme.surface, RoundedCornerShape(40.dp))
             .height(80.dp)
             .padding(horizontal = 20.dp),
         horizontalArrangement = Arrangement.SpaceBetween,
