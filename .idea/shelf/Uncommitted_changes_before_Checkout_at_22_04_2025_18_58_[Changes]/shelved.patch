Index: app/src/main/java/com/example/passfort/designSystem/components/NavigationBar.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.passfort.designSystem.components\r\n\r\nimport androidx.annotation.DrawableRes\r\nimport androidx.annotation.StringRes\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.offset\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.shape.CircleShape\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.Immutable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableIntStateOf\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.clip\r\nimport androidx.compose.ui.draw.shadow\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.graphics.vector.ImageVector\r\nimport androidx.compose.ui.res.stringResource\r\nimport androidx.compose.ui.res.vectorResource\r\nimport androidx.compose.ui.tooling.preview.PreviewLightDark\r\nimport androidx.compose.ui.unit.IntOffset\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.currentBackStackEntryAsState\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.passfort.R\r\nimport com.example.passfort.designSystem.theme.PassFortTheme\r\nimport com.example.passfort.navigation.Screen\r\nimport kotlin.enums.EnumEntries\r\n\r\nenum class ENavigationItem(\r\n    val nameResId: Int,\r\n    val iconResId: Int,\r\n    val route: String\r\n) {\r\n    HOME(\r\n        nameResId = R.string.home_screen,\r\n        iconResId = R.drawable.navbar_home,\r\n        route = Screen.HomeScreen.route\r\n    ),\r\n    PASSWORDS(\r\n        nameResId = R.string.password_list,\r\n        iconResId = R.drawable.navbar_passwords,\r\n        route = Screen.PasswordList.route\r\n    ),\r\n    GENERATOR(\r\n        nameResId = R.string.password_generator,\r\n        iconResId = R.drawable.navbar_key,\r\n        route = Screen.PasswordGenerator.route\r\n\r\n    ),\r\n    SETTINGS(\r\n        nameResId = R.string.settings,\r\n        iconResId = R.drawable.navbar_settings,\r\n        route = Screen.Settings.route\r\n\r\n    );\r\n}\r\n\r\n@Composable\r\nfun NavigationBar(navController: NavHostController) {\r\n    val navItems = ENavigationItem.entries.toList()\r\n\r\n    Box(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .padding(horizontal = 15.dp)\r\n            .padding(top = 10.dp)\r\n            .height(100.dp)\r\n    ) {\r\n        Box(\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .height(70.dp)\r\n\r\n        ) {\r\n            Row(\r\n                modifier = Modifier\r\n                    .fillMaxSize()\r\n                    .shadow(5.dp, shape = CircleShape)\r\n            ) {\r\n            }\r\n            Row(\r\n                modifier = Modifier\r\n                    .fillMaxWidth()\r\n                    .background(Color.White, RoundedCornerShape(40.dp))\r\n                    .height(70.dp)\r\n                    .padding(horizontal = 20.dp),\r\n                horizontalArrangement = Arrangement.SpaceBetween,\r\n                verticalAlignment = Alignment.CenterVertically\r\n            ) {\r\n                navItems.forEachIndexed { index, item ->\r\n                    NavItem(\r\n                        ImageVector.vectorResource(item.iconResId),\r\n                        stringResource(item.nameResId),\r\n                        item.route,\r\n                        navController\r\n                    )\r\n\r\n                    if (index == 1) {\r\n                        Box(\r\n                            modifier = Modifier\r\n                                .offset { IntOffset(x = 0, y = -50) }\r\n                                .size(100.dp)\r\n                                .padding(5.dp)\r\n                        ) {\r\n                            Box(\r\n                                modifier = Modifier\r\n                                    .fillMaxSize()\r\n                                    .clip(CircleShape)\r\n                            ) {}\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        Box(\r\n            modifier = Modifier\r\n                .offset { IntOffset(x = 0, y = -100) }\r\n                .align(Alignment.TopCenter)\r\n                .clickable { navController.navigate(Screen.AddPassword.route){\r\n                    popUpTo(Screen.PasswordList.route) { inclusive = false }\r\n                    launchSingleTop = true\r\n                    restoreState = true\r\n                }}\r\n                .size(90.dp)\r\n                .padding(5.dp)\r\n                .shadow(10.dp, shape = CircleShape)\r\n        ) {\r\n            Box(\r\n                modifier = Modifier\r\n                    .fillMaxSize()\r\n                    .clip(CircleShape)\r\n                    .background(\r\n                        MaterialTheme.colorScheme.primary,\r\n                        RoundedCornerShape(35.dp)\r\n                    )\r\n            ) {\r\n                Icon(\r\n                    modifier = Modifier\r\n                        .fillMaxSize()\r\n                        .clip(CircleShape),\r\n                    imageVector = ImageVector.vectorResource(R.drawable.icon_button_add),\r\n                    tint = MaterialTheme.colorScheme.surface,\r\n                    contentDescription = null,\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun NavItem(iconImage: ImageVector,\r\n            navigateString: String,\r\n            route: String,\r\n            navController: NavHostController\r\n) {\r\n\r\n    val navBackStackEntry by navController.currentBackStackEntryAsState()\r\n    val currentRoute = navBackStackEntry?.destination?.route\r\n\r\n    val iconColor = if (currentRoute == route) MaterialTheme.colorScheme.primary else MaterialTheme.colorScheme.secondary\r\n\r\n    Box(\r\n        modifier = Modifier\r\n            .size(50.dp)\r\n            .clickable {\r\n                navController.navigate(navigateString) {\r\n                    popUpTo(Screen.PasswordList.route) { inclusive = false }\r\n                    launchSingleTop = true\r\n                    restoreState = true\r\n                }\r\n            }\r\n            .padding(10.dp),\r\n        contentAlignment = Alignment.Center\r\n    ) {\r\n        Icon(\r\n            modifier = Modifier\r\n                .fillMaxSize(),\r\n            imageVector = iconImage,\r\n            tint = iconColor,\r\n            contentDescription = null,\r\n        )\r\n    }\r\n}\r\n\r\n@PreviewLightDark\r\n@Composable\r\nfun PrevieNavBar(){\r\n    var navController = rememberNavController()\r\n    PassFortTheme { NavigationBar(navController) }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/passfort/designSystem/components/NavigationBar.kt b/app/src/main/java/com/example/passfort/designSystem/components/NavigationBar.kt
--- a/app/src/main/java/com/example/passfort/designSystem/components/NavigationBar.kt	(revision f079e34859da08dfef3b6c9edfa426509cb7d546)
+++ b/app/src/main/java/com/example/passfort/designSystem/components/NavigationBar.kt	(date 1745337467134)
@@ -60,7 +60,7 @@
     GENERATOR(
         nameResId = R.string.password_generator,
         iconResId = R.drawable.navbar_key,
-        route = Screen.PasswordGenerator.route
+        route = Screen.PasswordGenScreen.route
 
     ),
     SETTINGS(
Index: app/src/main/java/com/example/passfort/ui/PasswordsScreenListState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.passfort.ui\r\n\r\nimport com.example.passfort.dbentity.PasswordRecordEntity\r\nimport kotlinx.collections.immutable.ImmutableList\r\nimport kotlinx.collections.immutable.persistentListOf\r\n\r\ndata class PasswordsScreenListState(\r\n    val passwordsPinnedList: ImmutableList<PasswordRecordEntity> = persistentListOf(),\r\n    val passwordsNotPinnedList: ImmutableList<PasswordRecordEntity> = persistentListOf(),\r\n    val screenState: ScreenState = ScreenState.LOADING\r\n)\r\n\r\nenum class ScreenState {\r\n    SUCCESS,\r\n    LOADING,\r\n    ERROR\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/passfort/ui/PasswordsScreenListState.kt b/app/src/main/java/com/example/passfort/ui/PasswordsScreenListState.kt
--- a/app/src/main/java/com/example/passfort/ui/PasswordsScreenListState.kt	(revision f079e34859da08dfef3b6c9edfa426509cb7d546)
+++ b/app/src/main/java/com/example/passfort/ui/PasswordsScreenListState.kt	(date 1745337467141)
@@ -10,8 +10,3 @@
     val screenState: ScreenState = ScreenState.LOADING
 )
 
-enum class ScreenState {
-    SUCCESS,
-    LOADING,
-    ERROR
-}
Index: app/src/main/java/com/example/passfort/screen/auth/LoginScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.passfort.screen.auth\r\n\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\n\r\n@Composable\r\nfun LoginScreen(\r\n    onLoginClick: () -> Unit,\r\n    onRegisterClick: () -> Unit\r\n) {\r\n    Column {\r\n        Button(onClick = onLoginClick) {\r\n            Text(\"Войти (заглушка)\")\r\n        }\r\n        Button(onClick = onRegisterClick) {\r\n            Text(\"Зарегистрироваться\")\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/passfort/screen/auth/LoginScreen.kt b/app/src/main/java/com/example/passfort/screen/auth/LoginScreen.kt
--- a/app/src/main/java/com/example/passfort/screen/auth/LoginScreen.kt	(revision f079e34859da08dfef3b6c9edfa426509cb7d546)
+++ b/app/src/main/java/com/example/passfort/screen/auth/LoginScreen.kt	(date 1745337467166)
@@ -1,21 +1,240 @@
 package com.example.passfort.screen.auth
 
+import androidx.compose.foundation.background
+import androidx.compose.foundation.clickable
+import androidx.compose.foundation.layout.Box
 import androidx.compose.foundation.layout.Column
-import androidx.compose.material3.Button
+import androidx.compose.foundation.layout.Spacer
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.height
+import androidx.compose.foundation.layout.heightIn
+import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.shape.RoundedCornerShape
+import androidx.compose.material3.Icon
+import androidx.compose.material3.MaterialTheme
+import androidx.compose.material3.Surface
 import androidx.compose.material3.Text
 import androidx.compose.runtime.Composable
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.draw.clip
+import androidx.compose.ui.draw.clipToBounds
+import androidx.compose.ui.graphics.vector.ImageVector
+import androidx.compose.ui.res.stringResource
+import androidx.compose.ui.res.vectorResource
+import androidx.compose.ui.text.style.TextDecoration
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.unit.dp
+import com.example.passfort.R
+import com.example.passfort.designSystem.components.AuthTextField
+import com.example.passfort.viewModel.LoginUiState
+import com.yourpackage.ui.components.AuthButton
+
 
 @Composable
 fun LoginScreen(
-    onLoginClick: () -> Unit,
-    onRegisterClick: () -> Unit
+    uiState: LoginUiState,
+    onUsernameChange: (String) -> Unit,
+    onPasswordChange: (String) -> Unit,
+    onLoginAttempt: () -> Unit,
+    onNavigateToRegister: () -> Unit,
+    onNavigateToForgotPassword: () -> Unit,
+    onNavigateToPrivacyPolicy: () -> Unit,
+    modifier: Modifier = Modifier
 ) {
-    Column {
-        Button(onClick = onLoginClick) {
-            Text("Войти (заглушка)")
+    Column(
+        modifier = modifier
+            .clipToBounds()
+            .fillMaxSize()
+            .background(MaterialTheme.colorScheme.primary)
+    ) {
+        Box(
+            modifier = Modifier
+                .fillMaxWidth()
+                .weight(1f)
+                .background(MaterialTheme.colorScheme.primary),
+            contentAlignment = Alignment.Center
+        ) {
+            Icon(
+                modifier = Modifier.fillMaxWidth(0.4f),
+                imageVector = ImageVector.vectorResource(R.drawable.navbar_home),
+                tint = MaterialTheme.colorScheme.secondary,
+                contentDescription = null
+            )
+        }
+        Box(
+            modifier = Modifier
+                .fillMaxWidth()
+                .weight(1f)
+                .clip(RoundedCornerShape(topStart = 32.dp, topEnd = 32.dp))
+                .background(MaterialTheme.colorScheme.surface)
+                .padding(horizontal = 24.dp, vertical = 16.dp)
+        ) {
+            LoginForm(
+                username = uiState.username,
+                password = uiState.password,
+                isLoading = uiState.isLoading,
+                usernameError = uiState.usernameError,
+                passwordError = uiState.passwordError,
+                onUsernameChange = onUsernameChange,
+                onPasswordChange = onPasswordChange,
+                onLogin = onLoginAttempt,
+                onRegister = onNavigateToRegister,
+                onForgotPassword = onNavigateToForgotPassword,
+                onPrivacyPolicy = onNavigateToPrivacyPolicy
+            )
         }
-        Button(onClick = onRegisterClick) {
-            Text("Зарегистрироваться")
+    }
+}
+
+@Composable
+fun LoginForm(
+    username: String,
+    password: String,
+    isLoading: Boolean,
+    usernameError: String?,
+    passwordError: String?,
+    onUsernameChange: (String) -> Unit,
+    onPasswordChange: (String) -> Unit,
+    onLogin: () -> Unit,
+    onRegister: () -> Unit,
+    onForgotPassword: () -> Unit,
+    onPrivacyPolicy: () -> Unit,
+) {
+    Box(
+        modifier = Modifier
+            .fillMaxWidth()
+    ) {
+        Column(
+            horizontalAlignment = Alignment.CenterHorizontally,
+            modifier = Modifier
+                .fillMaxWidth()
+                .padding(bottom = 160.dp)
+        ) {
+            AuthTextField(
+                label = stringResource(R.string.login_username_label),
+                value = username,
+                onValueChange = onUsernameChange,
+                isPassword = false,
+                enabled = !isLoading,
+                backgroundColor = MaterialTheme.colorScheme.onSurface.copy(alpha = 0.05f),
+                modifier = Modifier.fillMaxWidth()
+            )
+
+            if (usernameError != null) {
+                Text(
+                    text = usernameError,
+                    color = MaterialTheme.colorScheme.error,
+                    style = MaterialTheme.typography.bodySmall,
+                    modifier = Modifier
+                        .align(Alignment.Start)
+                        .padding(start = 8.dp)
+                        .heightIn(max = 20.dp)
+                )
+            }
+
+            Spacer(modifier = Modifier.height(8.dp))
+
+            AuthTextField(
+                label = stringResource(R.string.login_password_label),
+                value = password,
+                onValueChange = onPasswordChange,
+                isPassword = true,
+                enabled = !isLoading,
+                backgroundColor = MaterialTheme.colorScheme.onSurface.copy(alpha = 0.05f),
+                modifier = Modifier.fillMaxWidth()
+            )
+
+            if (passwordError != null) {
+                Text(
+                    text = passwordError,
+                    color = MaterialTheme.colorScheme.error,
+                    style = MaterialTheme.typography.bodySmall,
+                    modifier = Modifier
+                        .align(Alignment.Start)
+                        .padding(start = 8.dp)
+                        .heightIn(max = 20.dp)
+                )
+            }
+
+            Spacer(modifier = Modifier.height(8.dp))
+
+            Text(
+                text = stringResource(R.string.login_forgot_password_button),
+                style = MaterialTheme.typography.bodySmall.copy(
+                    textDecoration = TextDecoration.Underline
+                ),
+                modifier = Modifier
+                    .align(Alignment.Start)
+                    .clickable(enabled = !isLoading, onClick = onForgotPassword)
+                    .padding(start = 8.dp, bottom = 2.dp),
+                color = MaterialTheme.colorScheme.primary
+            )
         }
+
+        Column(
+            modifier = Modifier
+                .fillMaxWidth()
+                .align(Alignment.BottomCenter)
+                .padding(bottom = 40.dp)
+        ) {
+            Spacer(modifier = Modifier.weight(1f))
+            AuthButton(
+                text = stringResource(R.string.login_login_button),
+                onClick = onLogin,
+                isLoading = isLoading,
+                modifier = Modifier.fillMaxWidth()
+            )
+
+            Spacer(modifier = Modifier.height(4.dp))
+
+            AuthButton(
+                text = stringResource(R.string.login_register_button),
+                onClick = onRegister,
+                enabled = !isLoading,
+                modifier = Modifier
+                    .fillMaxWidth(),
+                containerColor = MaterialTheme.colorScheme.secondary,
+                contentColor = MaterialTheme.colorScheme.onSecondary,
+                isLoading = false
+            )
+
+            Spacer(modifier = Modifier.height(4.dp))
+
+            Text(
+                text = stringResource(R.string.login_privacy_policy_button),
+                style = MaterialTheme.typography.labelSmall.copy(
+                    textDecoration = TextDecoration.Underline
+                ),
+                modifier = Modifier
+                    .align(Alignment.CenterHorizontally)
+                    .clickable(enabled = !isLoading, onClick = onPrivacyPolicy),
+                color = MaterialTheme.colorScheme.secondary
+            )
+        }
     }
+}
+
+@Preview(showBackground = true)
+@Composable
+fun LoginScreenPreview() {
+    Surface {
+        val previewState = LoginUiState(
+            username = "preview@user.com",
+            password = "password",
+            isLoading = false,
+            usernameError = "2323",
+
+        )
+        LoginScreen(
+            uiState = previewState,
+            onUsernameChange = {},
+            onPasswordChange = {},
+            onLoginAttempt = {},
+            onNavigateToRegister = {},
+            onNavigateToForgotPassword = {},
+            onNavigateToPrivacyPolicy = {}
+        )
+    }
 }
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">PassFort</string>\r\n    <string name=\"title_activity_nav_bar\">NavBar</string>\r\n\r\n    <string name=\"login\">login</string>\r\n    <string name=\"register\">register</string>\r\n    <string name=\"home_screen\">home_screen</string>\r\n    <string name=\"password_list\">password_list</string>\r\n    <!--<string name=\"password_detail/{passwordId}\">PasswordDetail</string>\r\n    <string name=\"password_detail/$passwordId\">createRoute</string>-->\r\n    <string name=\"password_add\">password_add</string>\r\n    <string name=\"password_generator\">password_generator</string>\r\n    <string name=\"settings\">settings</string>\r\n    <string name=\"profile\">profile</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision f079e34859da08dfef3b6c9edfa426509cb7d546)
+++ b/app/src/main/res/values/strings.xml	(date 1745337467173)
@@ -1,6 +1,13 @@
 <resources>
     <string name="app_name">PassFort</string>
     <string name="title_activity_nav_bar">NavBar</string>
+    <string name="passwordgen_screen_title">Генерация пароля</string>
+    <string name="passwordgen_slider_title">Длина пароля</string>
+    <string name="passwordgen_toggle_digits_name">Цифры</string>
+    <string name="passwordgen_toggle_specChar_name">Специальные символы (#, @, _ и др.)</string>
+    <string name="passwordgen_toggle_lowercase_chars_name">Строчные буквы</string>
+    <string name="passwordgen_toggle_uppercase_chars_name">Прописные буквы</string>
+    <string name="passwordgen_bottombutton_text">Записать пароль</string>
 
     <string name="login">login</string>
     <string name="register">register</string>
@@ -12,4 +19,15 @@
     <string name="password_generator">password_generator</string>
     <string name="settings">settings</string>
     <string name="profile">profile</string>
+    <string name="login_screen_email_hint">Электронная почта</string>
+    <string name="login_screen_password_hint">Пароль</string>
+    <string name="login_login_button">Войти</string>
+    <string name="login_register_button">Создать аккаунт</string>
+    <string name="login_forgot_password_button">Забыли пароль?</string>
+    <string name="login_privacy_policy_button">Политика безопасности</string>
+    <string name="login_error_empty_fields">Введите логин и пароль</string>
+    <string name="content_description_app_logo">Логотип приложения</string>
+    <string name="login_password_label">Пароль</string>
+    <string name="login_username_label">Логин</string>
+    // Для contentDescription иконки
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/passfort/navigation/NavigationGraph.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.passfort.navigation\r\n\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport com.example.passfort.screen.auth.LoginScreen\r\nimport com.example.passfort.screen.auth.RegisterScreen\r\nimport com.example.passfort.screen.main.HomeScreen\r\nimport com.example.passfort.screen.passwords.AddPasswordScreen\r\nimport com.example.passfort.screen.passwords.PasswordListScreen\r\nimport com.example.passfort.screen.passwords.SettingsScreen\r\n\r\n@Composable\r\n\r\nfun NavigationGraph(\r\n    navController: NavHostController,\r\n    isUserLoggedIn: Boolean,\r\n    onLoginSuccess: () -> Unit,\r\n    onLogout: () -> Unit\r\n) {\r\n    NavHost(\r\n        navController = navController,\r\n        startDestination = if (isUserLoggedIn) Screen.HomeScreen.route\r\n        else Screen.Login.route\r\n    ) {\r\n        composable(Screen.Login.route) {\r\n            LoginScreen(\r\n                onLoginClick = {\r\n                    onLoginSuccess()\r\n                    navController.navigate(Screen.HomeScreen.route) {\r\n                        popUpTo(Screen.Login.route) { inclusive = true }\r\n                    }\r\n                },\r\n                onRegisterClick = {\r\n                    navController.navigate(Screen.Register.route)\r\n                }\r\n            )\r\n        }\r\n\r\n        composable(Screen.Register.route) {\r\n            RegisterScreen(\r\n                onBack = { navController.popBackStack() },\r\n                onRegisterSuccess = {\r\n                    onLoginSuccess()\r\n                    navController.navigate(Screen.HomeScreen.route) {\r\n                        popUpTo(Screen.Login.route) { inclusive = true }\r\n                    }\r\n                }\r\n            )\r\n        }\r\n\r\n        composable(Screen.HomeScreen.route) {\r\n            HomeScreen(navController)\r\n        }\r\n        composable(Screen.PasswordGenerator.route) {\r\n            PasswordGeneratorScreen(navController)\r\n        }\r\n        composable(Screen.AddPassword.route) {\r\n            AddPasswordScreen(navController)\r\n        }\r\n        composable(Screen.PasswordList.route) {\r\n            PasswordListScreen(navController)\r\n        }\r\n        composable(Screen.Settings.route) {\r\n            SettingsScreen(\r\n                navController,\r\n                onLogout = {\r\n                    onLogout()\r\n                    navController.navigate(Screen.Login.route) {\r\n                        popUpTo(0)\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/passfort/navigation/NavigationGraph.kt b/app/src/main/java/com/example/passfort/navigation/NavigationGraph.kt
--- a/app/src/main/java/com/example/passfort/navigation/NavigationGraph.kt	(revision f079e34859da08dfef3b6c9edfa426509cb7d546)
+++ b/app/src/main/java/com/example/passfort/navigation/NavigationGraph.kt	(date 1745337467180)
@@ -1,15 +1,27 @@
 package com.example.passfort.navigation
 
 import androidx.compose.runtime.Composable
+import androidx.compose.runtime.LaunchedEffect
+import androidx.compose.runtime.collectAsState
+import androidx.compose.runtime.getValue
+import androidx.compose.runtime.remember
+import androidx.compose.ui.platform.LocalContext
+import androidx.lifecycle.viewmodel.compose.viewModel
+import com.example.passfort.navigation.Screen
 import androidx.navigation.NavHostController
 import androidx.navigation.compose.NavHost
 import androidx.navigation.compose.composable
+import com.example.passfort.navigation.PasswordGeneratorScreen
+import com.example.passfort.root.MainViewModel
+import com.example.passfort.root.PreferencesManager
 import com.example.passfort.screen.auth.LoginScreen
 import com.example.passfort.screen.auth.RegisterScreen
 import com.example.passfort.screen.main.HomeScreen
 import com.example.passfort.screen.passwords.AddPasswordScreen
 import com.example.passfort.screen.passwords.PasswordListScreen
 import com.example.passfort.screen.passwords.SettingsScreen
+import com.example.passfort.ui.screen.passwordgen.PasswordGenScreen
+import com.example.passfort.viewModel.LoginViewModel
 
 @Composable
 
@@ -25,27 +37,38 @@
         else Screen.Login.route
     ) {
         composable(Screen.Login.route) {
-            LoginScreen(
-                onLoginClick = {
+
+            val context = LocalContext.current
+            val preferencesManager = remember { PreferencesManager(context.applicationContext) }
+
+            val viewModel: LoginViewModel = viewModel(
+                factory = LoginViewModel.provideFactory(preferencesManager)
+            )
+
+            val uiState = viewModel.uiState
+
+            LaunchedEffect(uiState.loginSuccess) {
+                if (uiState.loginSuccess) {
                     onLoginSuccess()
                     navController.navigate(Screen.HomeScreen.route) {
                         popUpTo(Screen.Login.route) { inclusive = true }
                     }
-                },
-                onRegisterClick = {
+                    viewModel.consumeLoginSuccessEvent()
+                }
+            }
+
+            LoginScreen(
+                uiState = uiState,
+                onUsernameChange = viewModel::onUsernameChange,
+                onPasswordChange = viewModel::onPasswordChange,
+                onLoginAttempt = viewModel::onLoginAttempt,
+
+                onNavigateToRegister = {
                     navController.navigate(Screen.Register.route)
-                }
-            )
-        }
-
-        composable(Screen.Register.route) {
-            RegisterScreen(
-                onBack = { navController.popBackStack() },
-                onRegisterSuccess = {
-                    onLoginSuccess()
-                    navController.navigate(Screen.HomeScreen.route) {
-                        popUpTo(Screen.Login.route) { inclusive = true }
-                    }
+                },
+                onNavigateToForgotPassword = {
+                },
+                onNavigateToPrivacyPolicy = {
                 }
             )
         }
@@ -53,15 +76,23 @@
         composable(Screen.HomeScreen.route) {
             HomeScreen(navController)
         }
-        composable(Screen.PasswordGenerator.route) {
-            PasswordGeneratorScreen(navController)
+        composable(Screen.PasswordGenScreen.route) {
+            PasswordGenScreen()
         }
+
         composable(Screen.AddPassword.route) {
             AddPasswordScreen(navController)
         }
         composable(Screen.PasswordList.route) {
             PasswordListScreen(navController)
         }
+        composable(Screen.Register.route) {
+            RegisterScreen(
+                navController,
+                onBack = {navController.navigate(Screen.Login.route)},
+                onRegisterSuccess = {navController.navigate(Screen.Login.route)}
+            )
+        }
         composable(Screen.Settings.route) {
             SettingsScreen(
                 navController,
Index: app/src/main/java/com/example/passfort/navigation/screen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.passfort.navigation\r\n\r\nsealed class Screen(val route: String) {\r\n    object Login : Screen(\"login\")\r\n    object Register : Screen(\"register\")\r\n    object HomeScreen: Screen(\"home_screen\")\r\n    object PasswordList : Screen(\"password_list\")\r\n    object PasswordDetail : Screen(\"password_detail/{passwordId}\") {\r\n        fun createRoute(passwordId: String) = \"password_detail/$passwordId\"\r\n    }\r\n    object AddPassword: Screen(\"password_add\")\r\n    object PasswordGenerator : Screen(\"password_generator\")\r\n    object Settings : Screen(\"settings\")\r\n    object Profile : Screen(\"profile\")\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/passfort/navigation/screen.kt b/app/src/main/java/com/example/passfort/navigation/screen.kt
--- a/app/src/main/java/com/example/passfort/navigation/screen.kt	(revision f079e34859da08dfef3b6c9edfa426509cb7d546)
+++ b/app/src/main/java/com/example/passfort/navigation/screen.kt	(date 1745337467187)
@@ -9,7 +9,7 @@
         fun createRoute(passwordId: String) = "password_detail/$passwordId"
     }
     object AddPassword: Screen("password_add")
-    object PasswordGenerator : Screen("password_generator")
+    object PasswordGenScreen : Screen("password_generator")
     object Settings : Screen("settings")
     object Profile : Screen("profile")
 
Index: app/src/main/java/com/example/passfort/screen/settings/SettingsScreen.kt
===================================================================
diff --git a/app/src/main/java/com/example/passfort/screen/settings/SettingsScreen.kt b/app/src/main/java/com/example/passfort/screen/settings/SettingsScreen.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/passfort/screen/settings/SettingsScreen.kt	(revision f079e34859da08dfef3b6c9edfa426509cb7d546)
+++ /dev/null	(revision f079e34859da08dfef3b6c9edfa426509cb7d546)
@@ -1,4 +0,0 @@
-package com.example.passfort.screen.settings
-
-class SettingsScreen {
-}
\ No newline at end of file
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.jetbrains.kotlin.android)\r\n    alias(libs.plugins.gms)\r\n    id(\"com.google.devtools.ksp\") version \"1.9.0-1.0.13\"\r\n    id(\"com.google.dagger.hilt.android\")\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.passfort\"\r\n    compileSdk = 35\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.passfort\"\r\n        minSdk = 26\r\n        targetSdk = 35\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary = true\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_11\r\n        targetCompatibility = JavaVersion.VERSION_11\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"11\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion = \"1.5.1\"\r\n    }\r\n    packaging {\r\n        resources {\r\n            excludes += \"/META-INF/{AL2.0,LGPL2.1}\"\r\n        }\r\n    }\r\n    buildToolsVersion = \"35.0.0\"\r\n}\r\n\r\ndependencies {\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n    // ViewModel provider\r\n    implementation(libs.androidx.lifecycle.viewmodel.compose)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n\r\n\r\n\r\n    // Retrofit\r\n    implementation(libs.retrofit)\r\n    // Retrofit with Scalar Converter\r\n    implementation(libs.converter.scalars)\r\n    //Gson\r\n    implementation(libs.gson)\r\n    // Import the BoM for the Firebase platform\r\n    implementation(platform(libs.firebase.bom))\r\n    // Firebase Database\r\n    implementation(libs.firebase.database)\r\n    implementation(libs.firebase.firestore)\r\n    //Timber\r\n    implementation(libs.timber)\r\n    // Room library\r\n    implementation(libs.androidx.room.runtime)\r\n    // Room extensions for Kotlin Coroutines, Kotlin Flows\r\n    implementation(libs.androidx.room.ktx)\r\n    // Room codegen\r\n    ksp(libs.androidx.room.compiler)\r\n    // Hilt dependency\r\n    implementation(libs.hilt.android)\r\n    // Hilt navigation\r\n    implementation(libs.androidx.hilt.navigation.compose)\r\n    // Hilt codegen\r\n    ksp(libs.hilt.android.compiler)\r\n    // Kotlin immutable collections\r\n    implementation(libs.kotlinx.collections.immutable)\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision f079e34859da08dfef3b6c9edfa426509cb7d546)
+++ b/app/build.gradle.kts	(date 1745337467198)
@@ -54,6 +54,7 @@
 }
 
 dependencies {
+    implementation(libs.androidx.lifecycle.runtime.compose)
     implementation(libs.androidx.core.ktx)
     implementation(libs.androidx.lifecycle.runtime.ktx)
     implementation(libs.androidx.activity.compose)
@@ -101,5 +102,7 @@
     ksp(libs.hilt.android.compiler)
     // Kotlin immutable collections
     implementation(libs.kotlinx.collections.immutable)
+    // Add extended material icons
+    implementation(libs.androidx.material.icons.extended)
 
 }
\ No newline at end of file
Index: app/src/main/java/com/example/passfort/screen/auth/RegisterScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.passfort.screen.auth\r\n\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\n\r\n@Composable\r\nfun RegisterScreen(\r\n    onBack: () -> Unit,\r\n    onRegisterSuccess: () -> Unit\r\n) {\r\n    Column {\r\n        Button(onClick = onRegisterSuccess) {\r\n            Text(\"Зарегистрироваться (заглушка)\")\r\n        }\r\n        Button(onClick = onBack) {\r\n            Text(\"Назад\")\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/passfort/screen/auth/RegisterScreen.kt b/app/src/main/java/com/example/passfort/screen/auth/RegisterScreen.kt
--- a/app/src/main/java/com/example/passfort/screen/auth/RegisterScreen.kt	(revision f079e34859da08dfef3b6c9edfa426509cb7d546)
+++ b/app/src/main/java/com/example/passfort/screen/auth/RegisterScreen.kt	(date 1745337467204)
@@ -4,9 +4,11 @@
 import androidx.compose.material3.Button
 import androidx.compose.material3.Text
 import androidx.compose.runtime.Composable
+import androidx.navigation.NavHostController
 
 @Composable
 fun RegisterScreen(
+    navController: NavHostController,
     onBack: () -> Unit,
     onRegisterSuccess: () -> Unit
 ) {
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"purple_200\">#FFBB86FC</color>\r\n    <color name=\"purple_500\">#FF6200EE</color>\r\n    <color name=\"purple_700\">#FF3700B3</color>\r\n    <color name=\"teal_200\">#FF03DAC5</color>\r\n    <color name=\"teal_700\">#FF018786</color>\r\n    <color name=\"black\">#FF000000</color>\r\n    <color name=\"white\">#FFFFFFFF</color>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
--- a/app/src/main/res/values/colors.xml	(revision f079e34859da08dfef3b6c9edfa426509cb7d546)
+++ b/app/src/main/res/values/colors.xml	(date 1745337467209)
@@ -7,4 +7,5 @@
     <color name="teal_700">#FF018786</color>
     <color name="black">#FF000000</color>
     <color name="white">#FFFFFFFF</color>
+    <color name="text_field_color">#FFF2F1F3</color>
 </resources>
\ No newline at end of file
Index: build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nplugins {\r\n    alias(libs.plugins.android.application) apply false\r\n    alias(libs.plugins.jetbrains.kotlin.android) apply false\r\n    alias(libs.plugins.gms) apply false\r\n    id(\"com.google.devtools.ksp\") version \"1.9.0-1.0.13\" apply false\r\n    id(\"com.google.dagger.hilt.android\") version \"2.51.1\" apply false\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle.kts b/build.gradle.kts
--- a/build.gradle.kts	(revision f079e34859da08dfef3b6c9edfa426509cb7d546)
+++ b/build.gradle.kts	(date 1745337467213)
@@ -5,4 +5,5 @@
     alias(libs.plugins.gms) apply false
     id("com.google.devtools.ksp") version "1.9.0-1.0.13" apply false
     id("com.google.dagger.hilt.android") version "2.51.1" apply false
+
 }
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\r\nagp = \"8.9.1\"\r\nhiltAndroidCompiler = \"2.51.1\"\r\nhiltNavigationCompose = \"1.2.0\"\r\nkotlin = \"1.9.0\"\r\ncoreKtx = \"1.15.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nkotlinxCollectionsImmutable = \"0.3.8\"\r\nlifecycleRuntimeKtx = \"2.8.7\"\r\nactivityCompose = \"1.10.1\"\r\ncomposeBom = \"2024.04.01\"\r\ngmsVersion = \"4.4.2\"\r\nretrofitVersion = \"2.9.0\"\r\ngsonVersion = \"2.12.1\"\r\nfirebaseBomVersion = \"33.1.2\"\r\nroomVersion = \"2.6.1\"\r\ntimberVersion = \"5.0.1\"\r\nnavigationCompose = \"2.7.7\"\r\nnavigationRuntimeAndroid = \"2.9.0-alpha09\"\r\n\r\n[libraries]\r\nandroidx-navigation-runtime-android = { group = \"androidx.navigation\", name = \"navigation-runtime-android\", version.ref = \"navigationRuntimeAndroid\" }\r\nandroidx-navigation-compose = { module = \"androidx.navigation:navigation-compose\", version.ref = \"navigationCompose\" }\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\nandroidx-hilt-navigation-compose = { module = \"androidx.hilt:hilt-navigation-compose\", version.ref = \"hiltNavigationCompose\" }\r\nandroidx-lifecycle-viewmodel-compose = { module = \"androidx.lifecycle:lifecycle-viewmodel-compose\", version.ref = \"lifecycleRuntimeKtx\" }\r\nandroidx-room-ktx = { module = \"androidx.room:room-ktx\", version.ref = \"roomVersion\" }\r\nandroidx-room-runtime = { module = \"androidx.room:room-runtime\", version.ref = \"roomVersion\" }\r\nandroidx-room-compiler = { module = \"androidx.room:room-compiler\", version.ref = \"roomVersion\" }\r\nhilt-android = { module = \"com.google.dagger:hilt-android\", version.ref = \"hiltAndroidCompiler\" }\r\nhilt-android-compiler = { module = \"com.google.dagger:hilt-android-compiler\", version.ref = \"hiltAndroidCompiler\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-lifecycle-runtime-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-runtime-ktx\", version.ref = \"lifecycleRuntimeKtx\" }\r\nandroidx-activity-compose = { group = \"androidx.activity\", name = \"activity-compose\", version.ref = \"activityCompose\" }\r\nandroidx-compose-bom = { group = \"androidx.compose\", name = \"compose-bom\", version.ref = \"composeBom\" }\r\nandroidx-ui = { group = \"androidx.compose.ui\", name = \"ui\" }\r\nandroidx-ui-graphics = { group = \"androidx.compose.ui\", name = \"ui-graphics\" }\r\nandroidx-ui-tooling = { group = \"androidx.compose.ui\", name = \"ui-tooling\" }\r\nandroidx-ui-tooling-preview = { group = \"androidx.compose.ui\", name = \"ui-tooling-preview\" }\r\nandroidx-ui-test-manifest = { group = \"androidx.compose.ui\", name = \"ui-test-manifest\" }\r\nandroidx-ui-test-junit4 = { group = \"androidx.compose.ui\", name = \"ui-test-junit4\" }\r\nandroidx-material3 = { group = \"androidx.compose.material3\", name = \"material3\" }\r\n\r\nkotlinx-collections-immutable = { module = \"org.jetbrains.kotlinx:kotlinx-collections-immutable\", version.ref = \"kotlinxCollectionsImmutable\" }\r\nretrofit = { group = \"com.squareup.retrofit2\", name = \"retrofit\", version.ref = \"retrofitVersion\"  }\r\nconverter-scalars = { group = \"com.squareup.retrofit2\", name = \"converter-scalars\", version.ref = \"retrofitVersion\"  }\r\ngson = { group = \"com.google.code.gson\", name = \"gson\", version.ref = \"gsonVersion\"  }\r\nfirebase-bom = { group = \"com.google.firebase\", name = \"firebase-bom\", version.ref = \"firebaseBomVersion\" }\r\nfirebase-database = { group = \"com.google.firebase\", name = \"firebase-database-ktx\"}\r\nfirebase-firestore = { group = \"com.google.firebase\", name = \"firebase-firestore-ktx\"}\r\ntimber = { group = \"com.jakewharton.timber\", name = \"timber\", version.ref = \"timberVersion\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\njetbrains-kotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\ngms = { id = \"com.google.gms.google-services\", version.ref = \"gmsVersion\" }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision f079e34859da08dfef3b6c9edfa426509cb7d546)
+++ b/gradle/libs.versions.toml	(date 1745337467218)
@@ -4,6 +4,7 @@
 hiltNavigationCompose = "1.2.0"
 kotlin = "1.9.0"
 coreKtx = "1.15.0"
+composeUiVersion = "1.7.8"
 junit = "4.13.2"
 junitVersion = "1.2.1"
 espressoCore = "3.6.1"
@@ -12,6 +13,7 @@
 activityCompose = "1.10.1"
 composeBom = "2024.04.01"
 gmsVersion = "4.4.2"
+materialIconsExtended = "1.7.8"
 retrofitVersion = "2.9.0"
 gsonVersion = "2.12.1"
 firebaseBomVersion = "33.1.2"
@@ -21,11 +23,13 @@
 navigationRuntimeAndroid = "2.9.0-alpha09"
 
 [libraries]
+androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycleRuntimeKtx" }
 androidx-navigation-runtime-android = { group = "androidx.navigation", name = "navigation-runtime-android", version.ref = "navigationRuntimeAndroid" }
 androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
 androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
 androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationCompose" }
 androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleRuntimeKtx" }
+androidx-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "materialIconsExtended" }
 androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "roomVersion" }
 androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomVersion" }
 androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomVersion" }
@@ -37,7 +41,7 @@
 androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
 androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
 androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
-androidx-ui = { group = "androidx.compose.ui", name = "ui" }
+androidx-ui = { group = "androidx.compose.ui", name = "ui", version.ref = "composeUiVersion" }
 androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
 androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
 androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
Index: app/src/main/java/com/example/passfort/root/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.passfort\r\n\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.compose.runtime.collectAsState\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.lifecycle.viewmodel.compose.viewModel\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.passfort.designSystem.theme.PassFortTheme\r\nimport com.example.passfort.navigation.NavigationGraph\r\nimport com.example.passfort.root.MainViewModel\r\nimport com.example.passfort.root.MainViewModelFactory\r\nimport com.example.passfort.root.PreferencesManager\r\n\r\n@Suppress(\"UNCHECKED_CAST\")\r\nclass MainActivity : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        enableEdgeToEdge()\r\n        setContent {\r\n            PassFortTheme {\r\n                val context = LocalContext.current\r\n                val preferencesManager = remember { PreferencesManager(context) }\r\n                val viewModel: MainViewModel = viewModel(\r\n                    factory = MainViewModelFactory(preferencesManager)\r\n                )\r\n\r\n\r\n                val navController = rememberNavController()\r\n                val isUserLoggedIn by viewModel.isUserLoggedIn.collectAsState()\r\n\r\n                NavigationGraph(\r\n                    navController = navController,\r\n                    isUserLoggedIn = isUserLoggedIn,\r\n                    onLoginSuccess = { viewModel.login() },\r\n                    onLogout = { viewModel.logout() }\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/passfort/root/MainActivity.kt b/app/src/main/java/com/example/passfort/root/MainActivity.kt
--- a/app/src/main/java/com/example/passfort/root/MainActivity.kt	(revision f079e34859da08dfef3b6c9edfa426509cb7d546)
+++ b/app/src/main/java/com/example/passfort/root/MainActivity.kt	(date 1745337467223)
@@ -8,6 +8,9 @@
 import androidx.compose.runtime.getValue
 import androidx.compose.runtime.remember
 import androidx.compose.ui.platform.LocalContext
+import androidx.core.view.WindowCompat
+import androidx.lifecycle.ViewModel
+import androidx.lifecycle.ViewModelProvider
 import androidx.lifecycle.viewmodel.compose.viewModel
 import androidx.navigation.compose.rememberNavController
 import com.example.passfort.designSystem.theme.PassFortTheme
